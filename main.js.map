{"version":3,"file":"main.js","mappings":"iyBAKO,IAAMA,EAAY,WACrB,SAAAA,gB,4GAAcC,CAAA,KAAAD,cACVE,KAAKC,QAAU,IAAIC,GACvB,CAoDC,O,uJAnDDC,CAAAL,aAAA,EAAAM,IAAA,KAAAC,MAGA,SAAAC,GAAGC,EAAWC,GACV,IAAIC,EACCT,KAAKC,QAAQS,IAAIH,IAClBP,KAAKC,QAAQU,IAAIJ,EAAW,IAAIK,KAEG,QAAtCH,EAAKT,KAAKC,QAAQY,IAAIN,UAA+B,IAAPE,GAAyBA,EAAGK,IAAIN,EACnF,GACA,CAAAJ,IAAA,MAAAC,MAGA,SAAAU,IAAIR,EAAWC,GACX,IAAIC,EACAT,KAAKC,QAAQS,IAAIH,KACjBP,KAAKC,QAAQY,IAAIN,GAAU,OAAQC,GACuD,KAA9C,QAAtCC,EAAKT,KAAKC,QAAQY,IAAIN,UAA+B,IAAPE,OAAgB,EAASA,EAAGO,OAC5EhB,KAAKC,QAAO,OAAQM,GAGhC,GACA,CAAAH,IAAA,OAAAC,MAGA,SAAAY,KAAKV,EAAWW,GACZlB,KAAKC,QAAQkB,SAAQ,SAACC,EAAaC,IAC3BA,aAAgBC,QAAUD,EAAKE,KAAKhB,IAAcc,IAASd,IAC3Da,EAAYD,SAAQ,SAAAX,GAAQ,OAAIA,EAASU,EAAK,GAEtD,GACJ,GACA,CAAAd,IAAA,QAAAC,MAGA,SAAAmB,MAAMhB,GACFR,KAAKM,GAAG,IAAKE,EACjB,GACA,CAAAJ,IAAA,SAAAC,MAGA,SAAAoB,SACIzB,KAAKC,QAAU,IAAIC,GACvB,GACA,CAAAE,IAAA,UAAAC,MAGA,SAAAqB,QAAQnB,EAAWoB,GAAS,IAAAC,EAAA,KACxB,OAAO,WAAgB,IAAfC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACbF,EAAKX,KAAKV,EAAW0B,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAIL,GAAS,CAAC,GAAMF,GAAW,CAAC,GACtF,CACJ,KAAC7B,YAAA,CAvDoB,G,szBCLlB,IAAMqC,EAAK,WACd,SAAAA,MAAYC,EAAQlB,I,iHAAMnB,CAAA,KAAAoC,OACtBnC,KAAKoC,OAASA,EACdH,OAAOC,OAAOlC,KAAMkB,EACxB,CAGC,O,sKAHAf,CAAAgC,MAAA,EAAA/B,IAAA,cAAAC,MACD,SAAAgC,YAAYR,EAAOS,GACftC,KAAKoC,OAAOnB,KAAKY,EAAOS,QAAyCA,EAAU,CAAC,EAChF,KAACH,KAAA,CAPa,G,gjECIA,ICHI,SAAAI,I,6SAAAC,CAAAC,UAAAF,GAAA,IAAAG,EAAAC,aAAAF,WAAA,SAAAA,YAAA,O,qHAAA1C,CAAA,KAAA0C,WAAAC,EAAAE,MAAA,KAAAd,UAAA,CA6CjB,O,kLA7CiB3B,CAAAsC,UAAA,EAAArC,IAAA,QAAAS,IAKlB,SAAAA,MACI,OAAOb,KAAK6C,MAChB,EAAClC,IAND,SAAAA,IAAUmC,GACN9C,KAAK6C,OAASC,EACd9C,KAAKoC,OAAOnB,KAAK,gBACrB,GAAC,CAAAb,IAAA,aAAAC,MAID,SAAA0C,WAAWC,GACPhD,KAAKiD,SAAWD,EAAKE,GACrBlD,KAAKoC,OAAOnB,KAAK,gBAAiB+B,EACtC,GAAC,CAAA5C,IAAA,aAAAC,MACD,SAAA8C,aACI,OAAOnD,KAAKiD,QAChB,GAAC,CAAA7C,IAAA,iBAAAC,MACD,SAAA+C,eAAeC,GACX,IAAML,EAAOhD,KAAK6C,OAAOS,MAAK,SAACN,GAAI,OAAKA,EAAKE,KAAOG,CAAM,IACrDL,EAAKO,UAKNP,EAAKO,UAAW,EAChBvD,KAAKoC,OAAOnB,KAAK,kBALjB+B,EAAKO,UAAW,EAChBvD,KAAKoC,OAAOnB,KAAK,cAMzB,GAAC,CAAAb,IAAA,UAAAC,MACD,SAAAmD,QAAQH,GACJ,IAAML,EAAOhD,KAAK6C,OAAOS,MAAK,SAACN,GAAI,OAAKA,EAAKE,KAAOG,CAAM,IAC1D,OAAIL,GACAhD,KAAKoC,OAAOnB,KAAK,gBAAiB+B,GAC3BA,QAGP,CAGR,GAAC,CAAA5C,IAAA,mBAAAC,MACD,SAAAoD,mBACI,OAAOzD,KAAK6C,OAAOa,QAAO,SAACV,GAAI,OAAKA,EAAKO,QAAQ,GACrD,GAAC,CAAAnD,IAAA,gBAAAC,MACD,SAAAsD,gBACI,OAAO3D,KAAKyD,mBAAmBG,QAAO,SAACC,EAAOb,GAAI,OAAKa,EAAQb,EAAKc,KAAK,GAAE,EAC/E,GAAC,CAAA1D,IAAA,gBAAAC,MACD,SAAA0D,gBACI/D,KAAK6C,OAAO1B,SAAQ,SAAA6B,GAAI,OAAIA,EAAKO,UAAW,CAAK,GACrD,KAACd,SAAA,CA7CiB,CAASN,GDGb,CADH,IAAIrC,E","sources":["webpack://my-webpack-project/./src/components/base/events.ts","webpack://my-webpack-project/./src/components/base/Model.ts","webpack://my-webpack-project/./src/index.ts","webpack://my-webpack-project/./src/components/CardsData.ts"],"sourcesContent":["/**\n * Брокер событий, классическая реализация\n * В расширенных вариантах есть возможность подписаться на все события\n * или слушать события по шаблону например\n */\nexport class EventEmitter {\n    constructor() {\n        this._events = new Map();\n    }\n    /**\n     * Установить обработчик на событие\n     */\n    on(eventName, callback) {\n        var _a;\n        if (!this._events.has(eventName)) {\n            this._events.set(eventName, new Set());\n        }\n        (_a = this._events.get(eventName)) === null || _a === void 0 ? void 0 : _a.add(callback);\n    }\n    /**\n     * Снять обработчик с события\n     */\n    off(eventName, callback) {\n        var _a;\n        if (this._events.has(eventName)) {\n            this._events.get(eventName).delete(callback);\n            if (((_a = this._events.get(eventName)) === null || _a === void 0 ? void 0 : _a.size) === 0) {\n                this._events.delete(eventName);\n            }\n        }\n    }\n    /**\n     * Инициировать событие с данными\n     */\n    emit(eventName, data) {\n        this._events.forEach((subscribers, name) => {\n            if (name instanceof RegExp && name.test(eventName) || name === eventName) {\n                subscribers.forEach(callback => callback(data));\n            }\n        });\n    }\n    /**\n     * Слушать все события\n     */\n    onAll(callback) {\n        this.on(\"*\", callback);\n    }\n    /**\n     * Сбросить все обработчики\n     */\n    offAll() {\n        this._events = new Map();\n    }\n    /**\n     * Сделать коллбек триггер, генерирующий событие при вызове\n     */\n    trigger(eventName, context) {\n        return (event = {}) => {\n            this.emit(eventName, Object.assign(Object.assign({}, (event || {})), (context || {})));\n        };\n    }\n}\n","export class Model {\n    constructor(events, data) {\n        this.events = events;\n        Object.assign(this, data);\n    }\n    emitChanges(event, payload) {\n        this.events.emit(event, payload !== null && payload !== void 0 ? payload : {});\n    }\n}\n","import { EventEmitter } from './components/base/events';\nimport { CardsData } from './components/CardsData';\nimport './scss/styles.scss';\nconst events = new EventEmitter();\nconst cardsData = new CardsData(events);\n","import { Model } from './base/Model';\nexport class CardsData extends Model {\n    set cards(cards) {\n        this._cards = cards;\n        this.events.emit('cards:changed');\n    }\n    get cards() {\n        return this._cards;\n    }\n    setPreview(card) {\n        this._preview = card.id;\n        this.events.emit('card:selected', card);\n    }\n    getPreview() {\n        return this._preview;\n    }\n    ToggleIsInCart(cardId) {\n        const card = this._cards.find((card) => card.id === cardId);\n        if (!card.isInCart) {\n            card.isInCart = true;\n            this.events.emit('card:added');\n        }\n        else {\n            card.isInCart = false;\n            this.events.emit('card:removed');\n        }\n    }\n    getCard(cardId) {\n        const card = this._cards.find((card) => card.id === cardId);\n        if (card) {\n            this.events.emit('card:selected', card);\n            return card;\n        }\n        else {\n            return undefined;\n        }\n        ;\n    }\n    getAddedProducts() {\n        return this._cards.filter((card) => card.isInCart);\n    }\n    getTotalPrice() {\n        return this.getAddedProducts().reduce((total, card) => total + card.price, 0);\n    }\n    resetIsInCart() {\n        this._cards.forEach(card => card.isInCart = false);\n    }\n}\n"],"names":["EventEmitter","_classCallCheck","this","_events","Map","_createClass","key","value","on","eventName","callback","_a","has","set","Set","get","add","off","size","emit","data","forEach","subscribers","name","RegExp","test","onAll","offAll","trigger","context","_this","event","arguments","length","undefined","Object","assign","Model","events","emitChanges","payload","_Model","_inherits","CardsData","_super","_createSuper","apply","_cards","cards","setPreview","card","_preview","id","getPreview","ToggleIsInCart","cardId","find","isInCart","getCard","getAddedProducts","filter","getTotalPrice","reduce","total","price","resetIsInCart"],"sourceRoot":""}